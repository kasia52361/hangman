{"version":3,"sources":["assets/kitty-head.png","assets/kitty-hand-right.png","assets/kitty-hand-left.png","assets/kitty-body.png","assets/kitty-leg-right.png","assets/kitty-leg-left.png","components/letters.jsx","components/answer.jsx","components/kitty.jsx","components/retryGame.jsx","components/appBody.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","LettersContainer","styled","ul","LetterBtn","a","Letters","state","letters","this","map","i","key","href","onClick","props","checkLetter","Component","BlankSpaceContainer","div","BlankSpace","LetterSpace","span","Answer","alphaNumeric","Array","from","arrayByLetters","answersList","toString","trim","split","words","style","display","margin","character","index","indexOf","className","toLowerCase","opacity","console","log","KittyContainer","Kitty","src","KittyHead","alt","KittyBody","KittyRightHand","KittyLeftHand","KittyRightLeg","KittyLeftLeg","Overlay","Retry","button","win","fontSize","LoadingBlend","appBody","loss","chances","result","endGame","isLoading","e","preventDefault","chosenLetter","target","answer","hangman","document","getElementsByClassName","hangmanLength","length","classList","add","shot","filter","text","setState","guessedAnswers","alphaAnswer","fetch","then","res","json","message","color","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,k4BCG3C,IAAMC,EAAmBC,IAAOC,GAAV,KAQhBC,EAAYF,IAAOG,EAAV,KAsEAC,E,2MA7CXC,MAAQ,CACJC,QAAS,CACL,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,M,wEAGE,IAAD,OACL,OACI,kBAACP,EAAD,KACKQ,KAAKF,MAAMC,QAAQE,KAAI,SAAAC,GAAC,OACrB,wBAAIC,IAAKD,GACL,kBAACP,EAAD,CAAWS,KAAK,IAAIC,QAAS,EAAKC,MAAMC,aACnCL,Y,GArCPM,a,w2BChCtB,IAAMC,EAAsBhB,IAAOiB,IAAV,KAUnBC,EAAalB,IAAOiB,IAAV,KASVE,EAAcnB,IAAOoB,KAAV,KA2EFC,E,2MApDXhB,MAAQ,G,wEAEJ,IAAMiB,EAAeC,MAAMC,KACvB,wDAOAC,EALelB,KAAKM,MAAMa,YACzBC,WACAC,OACAC,MAAM,KAEuBrB,KAAI,SAAAsB,GAClC,OACI,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,WAClCV,MAAMC,KAAKM,GAAOtB,KAAI,SAAC0B,EAAWC,GAE/B,OADab,EAAac,QAAQF,IACpB,EAEN,kBAACf,EAAD,CACIT,IAAG,UAAKwB,EAAL,YAAkBC,GACrBE,UAAS,8BAAyBH,EAAUI,gBAE5C,8BAAOJ,IAKX,kBAAChB,EAAD,CAAYR,IAAG,UAAKwB,EAAL,YAAkBC,IAC7B,0BAAMJ,MAAO,CAAEQ,QAAS,MACnBL,WAWjC,OAFAM,QAAQC,IAAIhB,GAGR,6BACI,wBAAIY,UAAU,mCAAd,0BAGA,yBAAKA,UAAU,QACX,kBAACrB,EAAD,KAAsBS,S,GA9CrBV,a,2qBClCrB,IAAM2B,EAAiB1C,IAAOiB,IAAV,KA8DL0B,E,2MA/BXtC,MAAQ,G,wEAEJ,OACI,kBAACqC,EAAD,KACI,yBAAKE,IAAKC,IAAWR,UAAU,sBAAsBS,IAAI,KACzD,yBAAKF,IAAKG,IAAWV,UAAU,sBAAsBS,IAAI,KACzD,yBACIF,IAAKI,IACLX,UAAU,sBACVS,IAAI,KAER,yBACIF,IAAKK,IACLZ,UAAU,sBACVS,IAAI,KAER,yBACIF,IAAKM,IACLb,UAAU,sBACVS,IAAI,KAER,yBACIF,IAAKO,IACLd,UAAU,sBACVS,IAAI,U,GAzBJ/B,a,yjBCrCpB,IAAMqC,EAAUpD,IAAOiB,IAAV,KA+CEoC,GAhCIrD,IAAOsD,OAAV,K,2MAYZjD,MAAQ,G,wEAEJ,IAAMkD,EAAMhD,KAAKM,MAAM0C,IAEvB,OACI,kBAACH,EAAD,KACI,6BACI,wBACIf,UAAU,mBACVN,MAAO,CAAEyB,SAAU,SAElBD,EAAM,WAAa,mB,GAZxBxC,c,oTCtBpB,IAAM0C,EAAezD,IAAOiB,IAAV,KAkIHyC,E,2MAnHXrD,MAAQ,CACJsD,KAAM,EACNC,QAAS,EACTC,OAAQ,GACRN,KAAK,EACLO,SAAS,EACTC,WAAW,G,EAYfjD,YAAc,SAAAkD,GACVA,EAAEC,iBAEF,IAAIC,EAAeF,EAAEG,OACjBC,EAAS7C,MAAMC,KAAK,EAAKnB,MAAMwD,QAC/BQ,EAAUC,SAASC,uBAAuB,mBAI1CC,GAHiBF,SAASC,uBACtB,0BACFE,OACcJ,EAAQI,QAM5B,GAJAjC,QAAQC,IAAI2B,GAEZF,EAAaQ,UAAUC,IAAI,aAEvB,EAAKtE,MAAMuD,QAAU,EAAG,CACxB,IAAIgB,EAAOR,EAAOS,QAAO,SAAAb,GACrB,OAAOA,EAAE1B,eAAiB4B,EAAaY,QAG3C,GAAIF,EAAKH,QAAU,EACf,IAAK,IAAIhE,EAAI,EAAGA,EAAImE,EAAKH,OAAQhE,IAC7B6D,SACKC,uBADL,8BAE+BK,EAAK,GAAGtC,gBAElC7B,GAAGiE,UAAUC,IAAI,cAEvB,CACHN,EAAQ,EAAKhE,MAAMsD,MAAMe,UAAUC,IAAI,UACvC,IAAIhB,EAAO,EAAKtD,MAAMsD,KAAO,EACzBC,EAAU,EAAKvD,MAAMuD,QAAU,EACnC,EAAKmB,SAAS,CAAEpB,KAAMA,EAAMC,QAASA,UAGzC,EAAKmB,SAAS,CAAEnB,QAAS,IACzBS,EAAQG,EAAgB,GAAGE,UAAUC,IAAI,UACzCnC,QAAQC,IAAI,aACZ,EAAKsC,SAAS,CAAEjB,SAAS,IAG7B,IAAIkB,EAAiBV,SAASC,uBAC1B,6BACFE,OAEFjC,QAAQC,IAAIuC,GACZxC,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAI2B,EAAOK,QAEnB,IAAMnD,EAAeC,MAAMC,KACvB,wDAGAyD,EAAcb,EAAOS,QAAO,SAAAb,GAAC,OAAI1C,EAAac,QAAQ4B,IAAM,KAChExB,QAAQC,IAAIwC,GAERD,GAAkBC,EAAYR,SAC9BjC,QAAQC,IAAI,aACZ,EAAKsC,SAAS,CAAEjB,SAAS,EAAMP,KAAK,M,mFAnEvB,IAAD,OAChBhD,KAAKwE,SAAS,CAAEhB,WAAW,IAC3BmB,MAAM,2DACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OACL,EAAKL,SAAS,CAAElB,OAAQuB,EAAIE,QAASvB,WAAW,S,+BAmExD,OADAvB,QAAQC,IAAIlC,KAAKF,MAAMwD,QACnBtD,KAAKF,MAAM0D,UACJ,kBAACN,EAAD,oBAGP,6BACI,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,mBACX,uCACa,IACT,uBAAGN,MAAO,CAAEwD,MAAO,cACdhF,KAAKF,MAAMuD,WAIxB,wBAAIvB,UAAU,yBAAd,WACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,YACX,wBAAIA,UAAU,eAAd,qBACA,kBAAC,EAAD,CAASvB,YAAaP,KAAKO,gBAGnC,6BACI,kBAAC,EAAD,CAAQY,YAAanB,KAAKF,MAAMwD,WAGvCtD,KAAKF,MAAMyD,QAAU,kBAAC,EAAD,CAAWP,IAAKhD,KAAKF,MAAMkD,MAAU,U,GA9GrDxC,a,YCRPyE,MARf,WACI,OACI,6BACI,kBAAC,EAAD,QCIQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASzB,SAAS0B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,MAAK,SAAAiB,GACjCA,EAAaC,kB","file":"static/js/main.8368fb2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kitty-head.3369f4d8.png\";","module.exports = __webpack_public_path__ + \"static/media/kitty-hand-right.bc0214b8.png\";","module.exports = __webpack_public_path__ + \"static/media/kitty-hand-left.ff076593.png\";","module.exports = __webpack_public_path__ + \"static/media/kitty-body.61de1d16.png\";","module.exports = __webpack_public_path__ + \"static/media/kitty-leg-right.8cd9e1f3.png\";","module.exports = __webpack_public_path__ + \"static/media/kitty-leg-left.3721bd29.png\";","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LettersContainer = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nconst LetterBtn = styled.a`\r\n    border-radius: 8px;\r\n    border: 2px solid lightpink;\r\n    font-size: 2rem;\r\n    background: transparent;\r\n    box-shadow: none;\r\n    padding: 5px 0;\r\n    color: #3d3838;\r\n    margin: 10px;\r\n    display: block;\r\n    width: 40px;\r\n    text-align: center;\r\n    &:hover {\r\n        color: #3d3838;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &.-disabled {\r\n        color: grey;\r\n        background-color: pink;\r\n        cursor: default;\r\n    }\r\n`;\r\n\r\nclass Letters extends Component {\r\n    state = {\r\n        letters: [\r\n            \"a\",\r\n            \"b\",\r\n            \"c\",\r\n            \"d\",\r\n            \"e\",\r\n            \"f\",\r\n            \"g\",\r\n            \"h\",\r\n            \"i\",\r\n            \"j\",\r\n            \"k\",\r\n            \"l\",\r\n            \"m\",\r\n            \"n\",\r\n            \"o\",\r\n            \"p\",\r\n            \"q\",\r\n            \"r\",\r\n            \"s\",\r\n            \"t\",\r\n            \"u\",\r\n            \"v\",\r\n            \"w\",\r\n            \"x\",\r\n            \"y\",\r\n            \"z\"\r\n        ]\r\n    };\r\n    render() {\r\n        return (\r\n            <LettersContainer>\r\n                {this.state.letters.map(i => (\r\n                    <li key={i}>\r\n                        <LetterBtn href=\"/\" onClick={this.props.checkLetter}>\r\n                            {i}\r\n                        </LetterBtn>\r\n                    </li>\r\n                ))}\r\n            </LettersContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Letters;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BlankSpaceContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 2rem;\r\n    font-size: 2rem;\r\n    line-height: 1;\r\n`;\r\n\r\nconst BlankSpace = styled.div`\r\n    width: 3rem;\r\n    height: 3rem;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`;\r\n\r\nconst LetterSpace = styled.span`\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    text-align: center;\r\n    margin: 0 5px;\r\n\r\n    &.-shown {\r\n        > span {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    > span {\r\n        opacity: 0;\r\n        transition: opacity 0.5s;\r\n    }\r\n`;\r\n\r\nclass Answer extends Component {\r\n    state = {};\r\n    render() {\r\n        const alphaNumeric = Array.from(\r\n            \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n        );\r\n        let arrayByWords = this.props.answersList\r\n            .toString()\r\n            .trim()\r\n            .split(\" \");\r\n\r\n        let arrayByLetters = arrayByWords.map(words => {\r\n            return (\r\n                <div style={{ display: \"flex\", margin: \"0 1rem\" }}>\r\n                    {Array.from(words).map((character, index) => {\r\n                        let letter = alphaNumeric.indexOf(character);\r\n                        if (letter > -1) {\r\n                            return (\r\n                                <LetterSpace\r\n                                    key={`${character} ${index}`}\r\n                                    className={`answerSingleSpacer -${character.toLowerCase()}`}\r\n                                >\r\n                                    <span>{character}</span>\r\n                                </LetterSpace>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <BlankSpace key={`${character} ${index}`}>\r\n                                    <span style={{ opacity: \"1\" }}>\r\n                                        {character}\r\n                                    </span>\r\n                                </BlankSpace>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n            );\r\n        });\r\n        console.log(arrayByLetters);\r\n\r\n        return (\r\n            <div>\r\n                <h3 className=\"text-center mt-5 text-uppercase\">\r\n                    What Does Trump Think?\r\n                </h3>\r\n                <div className=\"mb-5\">\r\n                    <BlankSpaceContainer>{arrayByLetters}</BlankSpaceContainer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport KittyHead from \"../assets/kitty-head.png\";\r\nimport KittyRightHand from \"../assets/kitty-hand-right.png\";\r\nimport KittyLeftHand from \"../assets/kitty-hand-left.png\";\r\nimport KittyBody from \"../assets/kitty-body.png\";\r\nimport KittyRightLeg from \"../assets/kitty-leg-right.png\";\r\nimport KittyLeftLeg from \"../assets/kitty-leg-left.png\";\r\n\r\nconst KittyContainer = styled.div`\r\n    position: relative;\r\n    width: 20rem;\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n    margin-bottom: 2rem;\r\n    border: 1px solid lightpink;\r\n\r\n    @media (min-width: 768px) {\r\n        width: 30rem;\r\n    }\r\n\r\n    > .img {\r\n        max-width: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        opacity: 0;\r\n        transition: opacity 0.5s;\r\n\r\n        &.-shown {\r\n            opacity: 1;\r\n        }\r\n\r\n        &:first-of-type {\r\n            position: static;\r\n        }\r\n    }\r\n`;\r\n\r\nclass Kitty extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <KittyContainer>\r\n                <img src={KittyHead} className=\"img hangmanBodyPart\" alt=\"\" />\r\n                <img src={KittyBody} className=\"img hangmanBodyPart\" alt=\"\" />\r\n                <img\r\n                    src={KittyRightHand}\r\n                    className=\"img hangmanBodyPart\"\r\n                    alt=\"\"\r\n                />\r\n                <img\r\n                    src={KittyLeftHand}\r\n                    className=\"img hangmanBodyPart\"\r\n                    alt=\"\"\r\n                />\r\n                <img\r\n                    src={KittyRightLeg}\r\n                    className=\"img hangmanBodyPart\"\r\n                    alt=\"\"\r\n                />\r\n                <img\r\n                    src={KittyLeftLeg}\r\n                    className=\"img hangmanBodyPart\"\r\n                    alt=\"\"\r\n                />\r\n            </KittyContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Kitty;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Overlay = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 10;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 25px;\r\n    text-align: center;\r\n    background: #add8e6de;\r\n`;\r\n\r\nconst BtnPrimary = styled.button`\r\n    appearance: none;\r\n    background: lightpink;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    box-shadow: none;\r\n    color: white;\r\n    font-size: 16px;\r\n    padding: 7px 35px;\r\n`;\r\n\r\nclass Retry extends Component {\r\n    state = {};\r\n    render() {\r\n        const win = this.props.win;\r\n\r\n        return (\r\n            <Overlay>\r\n                <div>\r\n                    <h2\r\n                        className=\"text-center mb-4\"\r\n                        style={{ fontSize: \"50px\" }}\r\n                    >\r\n                        {win ? \"You won!\" : \"You loose\"}\r\n                    </h2>\r\n                    {/* <BtnPrimary type=\"button\">Retry</BtnPrimary> */}\r\n                </div>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Retry;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Letters from \"./letters\";\r\nimport Answer from \"./answer\";\r\nimport Kitty from \"./kitty\";\r\nimport RetryGame from \"./retryGame\";\r\n\r\nconst LoadingBlend = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(#fff, 0.8);\r\n    color: black;\r\n    font-size: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nclass appBody extends Component {\r\n    state = {\r\n        loss: 0,\r\n        chances: 6,\r\n        result: {},\r\n        win: false,\r\n        endGame: false,\r\n        isLoading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        fetch(\"https://api.whatdoestrumpthink.com/api/v1/quotes/random\")\r\n            .then(res => res.json())\r\n            .then(res =>\r\n                this.setState({ result: res.message, isLoading: false })\r\n            );\r\n    }\r\n\r\n    checkLetter = e => {\r\n        e.preventDefault();\r\n\r\n        let chosenLetter = e.target,\r\n            answer = Array.from(this.state.result),\r\n            hangman = document.getElementsByClassName(\"hangmanBodyPart\"),\r\n            hangmanVisible = document.getElementsByClassName(\r\n                \"hangmanBodyPart -shown\"\r\n            ).length,\r\n            hangmanLength = hangman.length;\r\n\r\n        console.log(answer);\r\n\r\n        chosenLetter.classList.add(\"-disabled\");\r\n\r\n        if (this.state.chances > 1) {\r\n            let shot = answer.filter(e => {\r\n                return e.toLowerCase() == chosenLetter.text;\r\n            });\r\n\r\n            if (shot.length >= 1) {\r\n                for (let i = 0; i < shot.length; i++) {\r\n                    document\r\n                        .getElementsByClassName(\r\n                            `answerSingleSpacer -${shot[0].toLowerCase()}`\r\n                        )\r\n                        [i].classList.add(\"-shown\");\r\n                }\r\n            } else {\r\n                hangman[this.state.loss].classList.add(\"-shown\");\r\n                let loss = this.state.loss + 1;\r\n                let chances = this.state.chances - 1;\r\n                this.setState({ loss: loss, chances: chances });\r\n            }\r\n        } else {\r\n            this.setState({ chances: 0 });\r\n            hangman[hangmanLength - 1].classList.add(\"-shown\");\r\n            console.log(\"game over\");\r\n            this.setState({ endGame: true });\r\n        }\r\n\r\n        let guessedAnswers = document.getElementsByClassName(\r\n            \"answerSingleSpacer -shown\"\r\n        ).length;\r\n\r\n        console.log(guessedAnswers);\r\n        console.log(answer);\r\n        console.log(answer.length);\r\n\r\n        const alphaNumeric = Array.from(\r\n            \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n        );\r\n\r\n        let alphaAnswer = answer.filter(e => alphaNumeric.indexOf(e) > -1);\r\n        console.log(alphaAnswer);\r\n\r\n        if (guessedAnswers == alphaAnswer.length) {\r\n            console.log(\"good job!\");\r\n            this.setState({ endGame: true, win: true });\r\n        }\r\n    };\r\n    render() {\r\n        console.log(this.state.result);\r\n        if (this.state.isLoading) {\r\n            return <LoadingBlend>Loading ...</LoadingBlend>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"text-right mt-3\">\r\n                        <h4>\r\n                            Chances:{\" \"}\r\n                            <b style={{ color: \"lightpink\" }}>\r\n                                {this.state.chances}\r\n                            </b>\r\n                        </h4>\r\n                    </div>\r\n                    <h1 className=\"text-center my-5 pb-5\">Hangman</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Kitty />\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <h2 className=\"text-center\">Choose the letter</h2>\r\n                            <Letters checkLetter={this.checkLetter} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Answer answersList={this.state.result} />\r\n                    </div>\r\n                </div>\r\n                {this.state.endGame ? <RetryGame win={this.state.win} /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default appBody;\r\n","import React from \"react\";\nimport AppBody from \"./components/appBody\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/_general.scss\";\n\nfunction App() {\n    return (\n        <div>\n            <AppBody />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}